{"version":3,"sources":["components/Pomodoro.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","props","style","id","className","onClick","name","TimeChanger","decrementID","decrement","valueID","value","incrementID","increment","Audio","controls","src","type","autoPlay","Pomodoro","useState","minutes","setMinutes","seconds","setSeconds","isBreak","setIsBreak","isPause","setIsPause","isReset","setIsReset","breakTime","setBreakTime","workTime","setWorkTime","bg","setBg","secondaryBg","beep","document","getElementById","minutesTimer","secondsTimer","useEffect","interval","setInterval","clearInterval","play","pause","currentTime","Fragment","background","fontSize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ea5653be.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport AddTwoToneIcon from '@material-ui/icons/AddTwoTone';\r\nimport RemoveTwoToneIcon from '@material-ui/icons/RemoveTwoTone';\r\nimport LocalCafeTwoToneIcon from '@material-ui/icons/LocalCafeTwoTone';\r\nimport LaptopChromebookTwoToneIcon from '@material-ui/icons/LaptopChromebookTwoTone';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <button\r\n\t\t\tstyle={props.style}\r\n      id={props.id}\r\n      className=\"bg-white hover:opacity-60 font-bold hover:text-gray-200 transition-all duration-500 rounded-md p-4\"\r\n      onClick={props.onClick}\r\n    >\r\n      {props.name}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction TimeChanger(props) {\r\n  return (\r\n    <div style={props.style} className=\"rounded-lg p-4 hover:opacity-60 transition-all duration-500\">\r\n      <h1 id={props.id} className=\"uppercase font-bold text-center m-4\">\r\n        {props.name}\r\n      </h1>\r\n      <div className=\"flex justify-evenly items-center\">\r\n        <button id={props.decrementID} onClick={props.decrement}>\r\n          <RemoveTwoToneIcon />\r\n        </button>\r\n        <span id={props.valueID} className=\"font-bold text-2xl\">\r\n          {props.value}\r\n        </span>\r\n        <button id={props.incrementID} onClick={props.increment}>\r\n          <AddTwoToneIcon />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Audio() {\r\n\treturn (\r\n\t\t<audio\r\n\t\t\tcontrols\r\n\t\t\tid=\"beep\"\r\n\t\t\tclassName=\"sr-only\"\r\n\t\t\tsrc=\"./beep.wav\"\r\n\t\t\ttype=\"audio/wav\"\r\n\t\t\tautoPlay\r\n\t\t\t/>\r\n\t)\r\n}\r\n\r\n\r\nfunction Pomodoro() {\r\n\r\n  let [minutes, setMinutes] = useState(25)\r\n  let [seconds, setSeconds] = useState(0)\r\n  let [isBreak, setIsBreak] = useState(false)\r\n  let [isPause, setIsPause] = useState(true)\r\n  let [isReset, setIsReset] = useState(false)\r\n\r\n  let [breakTime, setBreakTime] = useState(5)\r\n  let [workTime, setWorkTime] = useState(25)\r\n\r\n\tlet [bg, setBg] = useState(\"#f1f1f1\")\r\n\tlet [secondaryBg, setSecondaryBg] = useState(\"hsla(220, 14%, 96%, 10%)\")\r\n\r\n\r\n\tconst beep = document.getElementById(\"beep\")\r\n\r\n  let minutesTimer = minutes < 10 ? `0${minutes}` : minutes\r\n  let secondsTimer = seconds < 10 ? `0${seconds}` : seconds\r\n\r\n  const handlePlay = () => {\r\n    setIsPause(false)\r\n    setIsReset(false)\r\n  }\r\n  const handlePause = () => {\r\n    setIsPause(true)\r\n    setIsReset(false)\r\n  }\r\n  const handleReset = () => {\r\n    setIsReset(true)\r\n    setIsPause(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n\t\t{ isBreak ? setBg(\"hsl(105, 28%, 58%)\") : setBg(\"hsl(0, 44%, 48%)\") }\r\n    return isBreak ? setMinutes(breakTime) : setMinutes(workTime)\r\n  }, [isBreak, workTime, breakTime])\r\n\r\n  useEffect(() => {\r\n\r\n    if(!isPause) {\r\n      let interval = setInterval(() => {\r\n        clearInterval(interval)\r\n          if (seconds === 0) {\r\n            if (minutes !== 0) {\r\n              setMinutes(minutes - 1)\r\n            } else {\r\n              let newMinutes = !isBreak ? breakTime - 1 : workTime - 1\r\n              setMinutes(newMinutes)\r\n              setIsBreak(!isBreak)\r\n\r\n\t\t\t\t\t\t\t// Play beep\r\n\r\n\t\t\t\t\t\t\tbeep.play()\r\n\r\n            }\r\n            setSeconds(59)\r\n          } else {\r\n\t\t\t\t\t\tsetSeconds(seconds - 1)\r\n          }\r\n      }, 1000)\r\n    }\r\n    if(isReset && isPause) {\r\n      setMinutes(25)\r\n      setSeconds(0)\r\n\t\t\tsetBreakTime(5)\r\n\t\t\tsetWorkTime(25)\r\n\t\t\tbeep.pause()\r\n\t\t\tbeep.currentTime = 0\r\n    }\r\n  }, [seconds, isPause, isReset])\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n    <div\r\n\t\t \tstyle={{ background: `${bg}` }}\r\n\t\t\tclassName=\"grid grid-cols-12 gap-1 w-screen h-screen p-8 transition transition-all duration-500\">\r\n      <h1 className=\"col-span-12 text-center text-4xl text-gray-50 font-bold uppercase\">\r\n        Pomodoro\r\n      </h1>\r\n      <div className=\"col-span-12 lg:col-start-4 lg:col-span-6 grid grid-cols-2 gap-1\">\r\n        <TimeChanger\r\n\t\t\t\t\tstyle={{background: secondaryBg}}\r\n          id=\"break-label\"\r\n          incrementID=\"break-increment\"\r\n          decrementID=\"break-decrement\"\r\n          valueID=\"break-length\"\r\n          name={<LocalCafeTwoToneIcon style={{fontSize: 50}} />}\r\n          value={breakTime}\r\n          increment={() => breakTime === 60 ? breakTime : setBreakTime(breakTime + 5)}\r\n          decrement={() => breakTime === 5 ? breakTime : setBreakTime(breakTime - 5)}\r\n        />\r\n        <TimeChanger\r\n\t\t\t\t\tstyle={{background: secondaryBg}}\r\n          id=\"session-label\"\r\n          incrementID=\"session-increment\"\r\n          decrementID=\"session-decrement\"\r\n          valueID=\"session-length\"\r\n          name={<LaptopChromebookTwoToneIcon style={{fontSize: 50}} />}\r\n          value={workTime}\r\n          increment={() => workTime === 60 ? breakTime : setWorkTime(workTime + 5)}\r\n          decrement={() => workTime === 5 ? breakTime : setWorkTime(workTime - 5)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-8 items-stretch justify-items-stretch gap-1 col-span-12 lg:col-start-4 lg:col-span-6 text-center font-bold text-white\">\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{ background: secondaryBg }}\r\n          id=\"timer-label\"\r\n          className=\"col-span-3 bg-white rounded-md flex justify-center items-center uppercase hover:opacity-60 transition-all duration-500\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<span>{isBreak ? \"Thư giãn\" : \"Làm việc\"}</span>\r\n        </div>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{ background: secondaryBg }}\r\n          id=\"time-left\"\r\n          className=\"col-span-5 flex justify-center items-center bg-white text-6xl rounded-md py-8 hover:opacity-60 transition-all duration-500\"\r\n\t\t\t\t\t>\r\n          {minutesTimer}:{secondsTimer}\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-2 col-span-12 lg:col-start-4 lg:col-span-6 gap-1\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t!isPause ?\r\n\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\tstyle={{ background: secondaryBg }}\r\n\t\t\t\t\t\t\tid=\"start_stop\"\r\n\t\t\t\t\t\t\tname={<PauseCircleOutlineIcon style={{fontSize: 50}} />}\r\n\t\t\t\t\t\t\tonClick={() => handlePause()} /> :\r\n\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\tstyle={{ background: secondaryBg }}\r\n\t\t\t\t\t\t\tid=\"start_stop\" name={<PlayCircleOutlineIcon style={{fontSize: 50}} />}\r\n\t\t\t\t\t\t\tonClick={() => handlePlay()} />\r\n\t\t\t\t\t}\r\n        <Menu\r\n\t\t\t\t\tstyle={{ background: secondaryBg }}\r\n\t\t\t\t\tid=\"reset\"\r\n\t\t\t\t\tname={<RotateLeftIcon style={{fontSize: 50}} />}\r\n\t\t\t\t\tonClick={() => handleReset()} />\r\n      </div>\r\n\r\n\t\t\t<Audio />\r\n\r\n    </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Pomodoro\r\n","import './App.css';\r\nimport Pomodoro from \"./components/Pomodoro\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"h-screen flex justify-center items-center\">\r\n      <Pomodoro />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}